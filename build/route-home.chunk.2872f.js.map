{"version":3,"sources":["webpack:///./routes/home/index.js","webpack:///./routes/home/style.css","webpack:///../src/index.js","webpack:///./assets/beep.mp3"],"names":["counter","beep","Audio","beepAudio","phases","id","type","length","Label","phase","console","log","Home","useState","setPhase","class","style","home","onClick","clearTimeout","run","index","play","setTimeout","nextIndex","module","exports","getHookState","options","currentComponent","currentHook","hooks","push","initialState","reducer","init","hookState","currentIndex","_reducer","invokeOrReturn","nextValue","action","setState","useReducer","flushAfterPaintEffects","afterPaintEffects","some","component","forEach","invokeCleanup","invokeEffect","e","hook","_cleanup","arg","f","prevRaf","oldBeforeRender","oldAfterDiff","diffed","oldCommit","oldBeforeUnmount","unmount","vnode","c","requestAnimationFrame","callback","raf","done","timeout","HAS_RAF","cancelAnimationFrame","commitQueue","filter","cb"],"mappings":"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","file":"route-home.chunk.2872f.js","sourcesContent":["import { useState } from 'preact/hooks';\nimport style from './style';\nimport beepAudio from '../../assets/beep.mp3'\n\nconst beep = new Audio(beepAudio);\n\nconst phases = [\n\t{\n\t\tid: 0,\n\t\ttype: 'inhale',\n\t\tlength: 6\n\t},\n\t{\n\t\tid: 1,\n\t\ttype: 'exhale',\n\t\tlength: 6\n\t}\n];\n\nlet counter;\n\nconst Label = ({ phase }) => {\n\tconsole.log('in Label', phase);\n\treturn (\n\t\tphase\n\t\t? <h1>\n\t\t\t\tRunning: #{ phase.id + 1 } <span>{phase.type}</span>\n\t\t\t</h1>\n\t\t: <h1>Stopped</h1>\n\t)\n};\n\nconst Home = () => {\n\tconsole.log('Version 0.0');\n\tconst [phase, setPhase] = useState(null);\n\n\tconst run = (index) => {\n\t\tconsole.log('running: ', index);\n\t\tbeep.play();\n\t\tsetPhase(phases[index]);\n\t\tcounter = setTimeout(\n\t\t\t() => {\n\t\t\t\tconst nextIndex = phases[index + 1] ? index + 1 : 0;\n\t\t\t\tconsole.log('nextIndex', nextIndex);\n\t\t\t\trun(nextIndex);\n\t\t\t},\n\t\t\tphases[index].length * 1000\n\t\t);\n\t\tconsole.log('counter in run', counter);\n\t};\n\n\tconst stop = () => {\n\t\tsetPhase(null);\n\t\tconsole.log('counter in stop', counter);\n\t\tif (counter) {\n\t\t\tconsole.log('closing');\n\t\t\tclearTimeout(counter);\n\t\t}\n\t};\n\n\tconst toggle = () => {\n\t\tconsole.log('toggle');\n\t\t!phase ? run(0) : stop();\n\t};\n\n\treturn (\n\t\t<div class={style.home}>\n\t\t\t<Label phase={phase} />\n\n\t\t\t<button\n\t\t\t\tonClick={ toggle }\n\t\t\t>\n\t\t\t\tToggle\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n\nexport default Home;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"home__MseGd\"};","import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\thooks._pendingEffects = [];\n\t}\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks && c.__hooks._pendingEffects.length) {\n\t\tafterPaint(afterPaintEffects.push(c));\n\t}\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\ttry {\n\t\t\tc.__hooks._list.forEach(invokeCleanup);\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {import('./internal').HookState}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({});\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} initialState\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._component = currentComponent;\n\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst nextValue = hookState._reducer(hookState._value[0], action);\n\t\t\t\tif (hookState._value[0] !== nextValue) {\n\t\t\t\t\thookState._value = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\t}\n\n\treturn hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') ref(createHandle());\n\t\t\telse if (ref) ref.current = createHandle();\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._args = args;\n\t\tstate._factory = factory;\n\t\treturn (state._value = factory());\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\nexport function useErrorBoundary(cb) {\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = err => {\n\t\t\tif (state._value) state._value(err);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tafterPaintEffects.some(component => {\n\t\tif (component._parentDom) {\n\t\t\ttry {\n\t\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\t} catch (e) {\n\t\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\t\toptions._catchError(e, component._vnode);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t});\n\tafterPaintEffects = [];\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\tif (typeof hook._cleanup == 'function') hook._cleanup();\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\thook._cleanup = hook._value();\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn !oldArgs || newArgs.some((arg, index) => arg !== oldArgs[index]);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n","export default __webpack_public_path__ + \"e69db03d8e628a27235e406e1c05979c.mp3\";"],"sourceRoot":""}